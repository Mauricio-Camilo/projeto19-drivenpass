generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(0)
  users     User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  @@map("sessions")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String?       @unique
  password    String?       @unique
  createdAt   DateTime      @default(now()) @db.Timestamp(0)
  credentials Credential[]
  sessions    Session[]
  notes       Note[]
  cards       Card[]
  wifis       Wifi[]
  @@map("users")
}

model Credential {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String @unique
  url      String
  name     String
  password String
  users    User  @relation(fields: [userId], references: [id])
  @@map("credentials")
}

model Note {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String @unique
  note     String
  users    User  @relation(fields: [userId], references: [id])
  @@map("notes")
}

model Card {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String @unique
  name     String
  securityCode Int
  expirationDate String
  password  String
  isVirtual Boolean
  type      CardTypes 
  users     User  @relation(fields: [userId], references: [id])
  @@map("cards")
}

model Wifi {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String @unique
  name     String
  password String
  users     User  @relation(fields: [userId], references: [id])
  @@map("wifis")
}

enum CardTypes {
  Credito
  Debito
  Ambos
}